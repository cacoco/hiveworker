<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.angstrom</groupId>
  <artifactId>hiveworker</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>${project.artifactId}</name>
  <description>Hive Job submittal to AWS EMR in Scala using Finagle</description>
  <inceptionYear>2012</inceptionYear>
  <url>http://github.com/cacoco/hiveworker</url>

  <scm>
    <connection>scm:git:git@github.com:cacoco/hiveworker.git</connection>
    <url>scm:git:git@github.com:cacoco/hiveworker.git</url>
    <developerConnection>scm:git:git@github.com:cacoco/hiveworker.git</developerConnection>
  </scm>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <maven.compiler.source>1.6</maven.compiler.source>
    <maven.compiler.target>1.6</maven.compiler.target>
    <encoding>UTF-8</encoding>
    <slf4j.version>1.7.5</slf4j.version>
    <scala.version>2.10.1</scala.version>
    <spring.version>3.2.3.RELEASE</spring.version>
    <aws.jdk.version>1.4.1</aws.jdk.version>
  </properties>

  <!-- REPOSITORIES -->
  <repositories>
    <repository>
      <id>Sonatype Snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
    </repository>
    <repository>
      <id>Sonatype Releases</id>
      <url>https://oss.sonatype.org/content/repositories/releases/</url>
    </repository>
    <repository>
      <id>Maven Central</id>
      <url>http://repo1.maven.org/maven2/</url>
    </repository>
    <repository>
      <id>Twitter</id>
      <url>http://maven.twttr.com</url>
    </repository>
    <repository>
      <id>repository.springsource.milestone</id>
      <name>SpringSource Milestone Repository</name>
      <url>http://repo.springsource.org/milestone</url>
    </repository>
  </repositories>

  <pluginRepositories>

    <pluginRepository>
      <id>scala-tools.org</id>
      <name>Scala-Tools Maven2 Repository</name>
      <url>http://scala-tools.org/repo-releases</url>
    </pluginRepository>

    <pluginRepository>
      <id>sona</id>
      <name>sonatype</name>
      <url>https://oss.sonatype.org/content/groups/public</url>
    </pluginRepository>

    <pluginRepository>
      <id>mc-release</id>
      <name>Local Maven repository of releases</name>
      <url>http://mc-repo.googlecode.com/svn/maven2/releases</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </pluginRepository>
  </pluginRepositories>

  <!-- END REPOSITORIES -->

  <!-- DEPENDENCIES -->
  <distributionManagement>
    <repository>
      <id>milestone.repo.springsource.org</id>
      <name>repo.springsource.org-milestone</name>
      <url>https://repo.springsource.org/libs-milestone</url>
    </repository>
  </distributionManagement>
  <dependencies>

    <!-- SLF4J -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <!-- Binding for slf4j through commons logging since this
         is what twitter-server uses, but Quartz uses slf4j -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jcl</artifactId>
      <version>${slf4j.version}</version>
      <scope>runtime</scope>
    </dependency>

    <!-- Scala Lib -->
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
    </dependency>

    <!-- Amazon SDK -->
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk</artifactId>
      <version>${aws.jdk.version}</version>
    </dependency>

    <!-- Joda -->
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>2.2</version>
    </dependency>
    <dependency>
      <groupId>org.joda</groupId>
      <artifactId>joda-convert</artifactId>
      <version>1.3.1</version>
    </dependency>

    <!-- Quartz -->
    <dependency>
      <groupId>org.quartz-scheduler</groupId>
      <artifactId>quartz</artifactId>
      <version>2.1.7</version>
    </dependency>

    <!-- Twitter Server -->
    <dependency>
      <groupId>com.twitter</groupId>
      <artifactId>twitter-server_2.10</artifactId>
      <version>1.0.1</version>
    </dependency>
    <dependency>
      <groupId>com.twitter</groupId>
      <artifactId>util-eval_2.10</artifactId>
      <version>6.2.4</version>
    </dependency>

    <!-- Jackson -->
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-scala_2.10</artifactId>
      <version>2.1.3</version>
    </dependency>

    <!-- Spring -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.scala</groupId>
      <artifactId>spring-scala</artifactId>
      <version>1.0.0.M2</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_2.10</artifactId>
      <version>1.9.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-nop</artifactId>
      <version>${slf4j.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scalamock</groupId>
      <artifactId>scalamock-scalatest-support_2.10</artifactId>
      <version>3.0.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>6.8.1</version>
    </dependency>

  </dependencies>

  <!-- END DEPENDENCIES -->

  <!-- SCALADOC -->
  <reporting>
    <plugins>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.1.0</version>
      </plugin>
    </plugins>
  </reporting>
  <!-- END SCALADOC -->

  <!-- BUILD SETTINGS -->
  <build>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>

    <!-- BUILD PLUGINS -->
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.3</version>
        <executions>
          <execution>
            <phase>compile</phase>
            <configuration>
              <tasks>
                <property name="compile_classpath" refid="maven.compile.classpath" />
                <property name="runtime_classpath" refid="maven.runtime.classpath" />
                <path id="master.classpath">
                  <!--ant tasks-->
                  <pathelement path="${compile_classpath}" />
                  <pathelement path="${runtime_classpath}" />
                </path>
                <exec dir="." executable="git" outputproperty="git.revision">
                  <arg line="describe --always --abbrev=40 HEAD"/>
                </exec>
                <exec dir="." executable="git" outputproperty="git.branch">
                  <arg line="symbolic-ref -q HEAD"/>
                </exec>
                <tstamp>
                  <format property="build.time" pattern="yyyy-MM-dd HH:mm z" />
                </tstamp>
                <!-- put the version file -->
                <mkdir dir="${project.build.outputDirectory}/io/angstrom/hiveworker"/>
                <echo message="The build id is: ${project.version}-${git.revision}-${build.time}" />
                <echo file="${project.build.outputDirectory}/io/angstrom/hiveworker/build.properties">
                  name=${project.name}${line.separator}version=${project.version}${line.separator}timestamp=${build.time}${line.separator}build_revision=${git.revision}${line.separator}build=${project.version}${line.separator}build_branch_name=${git.branch}
                </echo>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <recompileMode>incremental</recompileMode>
          <args>
            <arg>-unchecked</arg>
            <arg>-deprecation</arg>
            <arg>-explaintypes</arg>
          </args>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
            <configuration>
              <args>
                <arg>-make:transitive</arg>
                <arg>-dependencyfile</arg>
                <arg>${project.build.directory}/.scala_dependencies</arg>
              </args>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <configuration>
          <mainClass>io.angstrom.hiveworker.Server</mainClass>
          <arguments>
            <argument>-dry.run=true</argument>
            <argument>-log.level=DEBUG</argument>
            <argument>-configuration=file:${project.basedir}/config/hiveworker.properties </argument>
          </arguments>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.2-beta-5</version>
        <configuration>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
          <archive>
            <manifest>
              <mainClass>io.angstrom.hiveworker.Server</mainClass>
            </manifest>
          </archive>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    <!-- disable surefire -->
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-plugin</artifactId>
      <version>2.12</version>
      <configuration>
        <useSystemClassLoader>false</useSystemClassLoader>
        <argLine>-Xmx1024m</argLine>
        <includes>
          <include>**/*Spec.java</include>
        </includes>
        <excludes>
          <exclude>**/*Test.java</exclude>
        </excludes>
      </configuration>
    </plugin>

    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-source-plugin</artifactId>
      <version>2.1.2</version>
      <executions>
        <execution>
          <id>attach-sources</id>
          <goals>
            <goal>jar</goal>
          </goals>
        </execution>
      </executions>
    </plugin>

    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-resources-plugin</artifactId>
      <version>2.5</version>
      <configuration>
        <encoding>UTF-8</encoding>
      </configuration>
    </plugin>

    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-release-plugin</artifactId>
      <version>2.3.2</version>
    </plugin>

  </plugins>
  <!-- END BUILD PLUGINS -->

    <!-- EXTENSIONS -->
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh-external</artifactId>
        <version>1.0-beta-7</version>
      </extension>
    </extensions>
    <!-- END EXTENSIONS -->

  </build>

  <profiles>
    <!-- GPG JAR SIGNING -->
    <profile>
      <id>sign</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.2</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- END GPG JAR SIGNING -->
  </profiles>
</project>
