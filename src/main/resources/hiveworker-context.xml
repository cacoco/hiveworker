<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations" value="${hiveworker.configuration}"/>
  </bean>

  <bean id="awsCredentials" class="com.amazonaws.auth.BasicAWSCredentials">
    <constructor-arg index="0" type="java.lang.String" value="${aws.access.key}"/>
    <constructor-arg index="1" type="java.lang.String" value="${aws.access.secret.key}"/>
  </bean>

  <bean id="clientConfiguration" class="com.amazonaws.ClientConfiguration">
    <property name="socketTimeout" value="${aws.client.socket.timeout}"/>
    <property name="connectionTimeout" value="${aws.client.connection.timeout}"/>
    <property name="maxConnections" value="${aws.client.max.connections}"/>
  </bean>

  <bean id="elasticMapReduce" class="com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduceClient">
    <constructor-arg index="0" type="com.amazonaws.auth.AWSCredentials" ref="awsCredentials"/>
    <constructor-arg index="1" type="com.amazonaws.ClientConfiguration" ref="clientConfiguration"/>
  </bean>

  <bean id="amazonSNS" class="com.amazonaws.services.sns.AmazonSNSClient">
    <constructor-arg index="0" type="com.amazonaws.auth.AWSCredentials" ref="awsCredentials"/>
    <constructor-arg index="1" type="com.amazonaws.ClientConfiguration" ref="clientConfiguration"/>
  </bean>

  <bean id="amazonSQS" class="com.amazonaws.services.sqs.AmazonSQSClient">
    <constructor-arg index="0" type="com.amazonaws.auth.AWSCredentials" ref="awsCredentials"/>
    <constructor-arg index="1" type="com.amazonaws.ClientConfiguration" ref="clientConfiguration"/>
  </bean>

  <bean id="defaultTopicARN" class="java.lang.String">
    <constructor-arg value="${aws.sns.topic.arn.job.errors}"/>
  </bean>

  <bean id="defaultQueueUrl" class="java.lang.String">
    <constructor-arg value="${aws.sqs.queue.url.default}"/>
  </bean>

  <bean id="jobActionOnFailure"
        class="com.amazonaws.services.elasticmapreduce.model.ActionOnFailure"
        factory-method="valueOf">
    <constructor-arg>
      <value>${job.action.on.failure}</value>
    </constructor-arg>
  </bean>

  <!-- See: http://docs.amazonwebservices.com/ElasticMapReduce/latest/DeveloperGuide/UsingEMR_Hive.html -->
  <bean id="hiveEnvironment" class="io.angstrom.hiveworker.HiveEnvironmentImpl">
    <constructor-arg index="0" name="hadoopVersion" value="0.20.205" type="java.lang.String" />
    <constructor-arg index="1" name="amiVersion" value="2.0.4" type="java.lang.String" />
    <constructor-arg index="2" name="hiveVersion" value="0.7.1.3" type="java.lang.String" />
    <constructor-arg index="3" name="nodeHeapSize" value="2048" type="java.lang.String" />
  </bean>

  <bean id="jobConfigurationFile" class="java.lang.String">
    <constructor-arg value="${jobs.configuration.file}" />
  </bean>

  <bean id="bucket" class="java.lang.String">
    <constructor-arg value="${hadoop.bucket}"/>
  </bean>
  <bean id="logUri" class="java.lang.String">
    <constructor-arg value="${hadoop.log.uri}"/>
  </bean>
  <bean id="masterInstanceType" class="java.lang.String">
    <constructor-arg value="${hadoop.instance.type.master}"/>
  </bean>
  <bean id="slaveInstanceType" class="java.lang.String">
    <constructor-arg value="${hadoop.instance.type.slave}"/>
  </bean>
</beans>